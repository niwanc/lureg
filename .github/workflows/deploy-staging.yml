name: Deploy

on:
  push:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-interaction --no-progress

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: InstallDependencies
        run: npm install

      - name: Npm build
        run: npm run build

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Copy environment file
        run: cp .env.ci .env

      - name: Generate app key
        run: |
          composer dump-autoload
          php artisan key:generate

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run Database Migrations
        run: php artisan migrate --seed

      - name: Run Passport Install
        run: php artisan passport:keys --force

      - name: Run Testsuite
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          php artisan optimize
          php artisan test

      - name: Require Vapor CLI
        run: composer global require laravel/vapor-cli

#      - name: Deploy Environment
#        run: vapor deploy staging
#        env:
#          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
#          MEDIA_LIBRARY_USERNAME: ${{ secrets.MEDIA_LIBRARY_USERNAME }}
#          MEDIA_LIBRARY_LICENSE: ${{ secrets.MEDIA_LIBRARY_LICENSE }}
#          COMPOSER_AUTH: '{"http-basic": {"filament-media-library-pro.composer.sh": {"username": "${{ secrets.MEDIA_LIBRARY_USERNAME }}", "password": "${{ secrets.MEDIA_LIBRARY_LICENSE }}"}} }'
